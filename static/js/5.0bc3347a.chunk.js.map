{"version":3,"sources":["containers/Settings/Settings.tsx","containers/Settings/index.tsx"],"names":["connect","state","initialCountries","book","countries","updateSettings","handleChange","e","target","name","checked","className","Object","entries","map","country","isSelected","key","id","type","onChange","htmlFor","toUpperCase","to","paths","main","Settings"],"mappings":"sbA6BO,IAyCQA,eACb,SAACC,GAAD,MAAmB,CACjBC,iBAAkBD,EAAME,KAAKC,aAE/B,CACEC,oBALWL,EAzC0B,SAAC,GAA0C,IAAxCE,EAAuC,EAAvCA,iBAAkBG,EAAqB,EAArBA,eAOtDC,EAAe,SAACC,GAA4C,IAAD,EACrCA,EAAEC,OAApBC,EADuD,EACvDA,KAAMC,EADiD,EACjDA,QACdL,E,yVAAe,CAAD,GACTH,EADS,eAEXO,EAAOC,MAIZ,OACE,yBAAKC,UAAU,YACb,yBAAKA,UAAU,uBACb,uBAAGA,UAAU,mBAAb,YACCC,OAAOC,QAAQX,GAAkBY,KAAI,mCAAEC,EAAF,KAAWC,EAAX,YACpC,yBAAKC,IAAKF,GACR,2BACEG,GAAE,mBAAcH,GAChBI,KAAK,WACLV,KAAMM,EACNL,QAASM,EACTI,SAAUd,IAEZ,2BAAOe,QAAO,mBAAcN,IACzBA,EAAQO,mBAIf,uBAAGX,UAAU,uBACX,kBAAC,IAAD,CAAMY,GAAIC,IAAMC,MAAhB,sBC7DKC","file":"static/js/5.0bc3347a.chunk.js","sourcesContent":["/**\n * Defines the {@link Settings} React component.\n * @module\n */\n\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { State } from \"../../redux/store\";\nimport { paths } from \"../../router\";\nimport { Countries } from \"../../redux/store\";\nimport { updateSettings } from \"../../redux/book/actions\";\n\nimport \"./Settings.scss\";\n\n/**\n * Props interface for {@link Settings}.\n */\nexport interface Props {\n  initialCountries: Countries;\n  updateSettings: typeof updateSettings;\n}\n\n/**\n * Main component for displaying address book\n *\n * @param {Props} props see {@link Props}\n * @returns Settings component\n */\nexport const Settings: React.FC<Props> = ({ initialCountries, updateSettings }) => {\n\n  /**\n   * Countries checkbox value change event handler\n   * \n   * @param e - html input change event\n   */\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    updateSettings({\n      ...initialCountries,\n      [name]: checked\n    });\n  };\n\n  return (\n    <div className=\"settings\">\n      <div className=\"settings__container\">\n        <p className=\"settings__title\">Settings</p>\n        {Object.entries(initialCountries).map(([country, isSelected]) => (\n          <div key={country}>\n            <input\n              id={`settings-${country}`}\n              type=\"checkbox\"\n              name={country}\n              checked={isSelected}\n              onChange={handleChange}\n            />\n            <label htmlFor={`settings-${country}`}>\n              {country.toUpperCase()}\n            </label>\n          </div>\n        ))}\n        <p className=\"settings__back-link\">\n          <Link to={paths.main}>Back to list</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(\n  (state: State) => ({\n    initialCountries: state.book.countries\n  }),\n  {\n    updateSettings\n  }\n)(Settings);\n","import Settings from './Settings';\n\nexport default Settings;"],"sourceRoot":""}